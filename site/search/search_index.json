{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to wiki.gdyu.club This is were info, archives, and resources by and for members of Game Devs @ YorkU are stored and maintained. Open source and always open to Contributions","title":"Home"},{"location":"#welcome-to-wikigdyuclub","text":"This is were info, archives, and resources by and for members of Game Devs @ YorkU are stored and maintained. Open source and always open to Contributions","title":"Welcome to wiki.gdyu.club"},{"location":"archives/","text":"Workshops fill in the rest GDYUxCSHUB: Godot intro #2 August 21st 2023 VOD CODE GDYUxCSHUB: Godot intro #1 July 26th 2023 VOD CODE Community events","title":"Archives"},{"location":"archives/#workshops","text":"fill in the rest","title":"Workshops"},{"location":"archives/#gdyuxcshub-godot-intro-2","text":"August 21st 2023 VOD CODE","title":"GDYUxCSHUB: Godot intro #2"},{"location":"archives/#gdyuxcshub-godot-intro-1","text":"July 26th 2023 VOD CODE","title":"GDYUxCSHUB: Godot intro #1"},{"location":"archives/#community-events","text":"","title":"Community events"},{"location":"dm-resources/","text":"DATT-2300 (Game Development 1) This is where helpful things would go.","title":"DATT-2300 (Game Development 1)"},{"location":"dm-resources/#datt-2300-game-development-1","text":"This is where helpful things would go.","title":"DATT-2300 (Game Development 1)"},{"location":"faq/","text":"Frequently asked questions What is GDYU? GDYU is an acronym for Game Devs @ YorkU. We're York Universities Game development club. What kind of stuff does the club do? We: Maintain a community discord server Host Community events in-person and online Host Workshops to teach about tools and aspects of game development. Where can I find GDYU? Our server is here We also have a club office at the Bergeron Center (Room 102B) Most GDYU members hang around the Berg a lot, you can find us there. How do I join GDYU? You can formally apply to join us through YU Connect , although just joining the server and coming to our events is fine enough. How do I make a game? This answer is a little longer so it get's it's own page","title":"Faq"},{"location":"faq/#frequently-asked-questions","text":"","title":"Frequently asked questions"},{"location":"faq/#what-is-gdyu","text":"GDYU is an acronym for Game Devs @ YorkU. We're York Universities Game development club.","title":"What is GDYU?"},{"location":"faq/#what-kind-of-stuff-does-the-club-do","text":"We: Maintain a community discord server Host Community events in-person and online Host Workshops to teach about tools and aspects of game development.","title":"What kind of stuff does the club do?"},{"location":"faq/#where-can-i-find-gdyu","text":"Our server is here We also have a club office at the Bergeron Center (Room 102B) Most GDYU members hang around the Berg a lot, you can find us there.","title":"Where can I find GDYU?"},{"location":"faq/#how-do-i-join-gdyu","text":"You can formally apply to join us through YU Connect , although just joining the server and coming to our events is fine enough.","title":"How do I join GDYU?"},{"location":"faq/#how-do-i-make-a-game","text":"This answer is a little longer so it get's it's own page","title":"How do I make a game?"},{"location":"makegames/","text":"So you wanna make games Making games is very fun, and NOT as difficult as most people think. I've broken it down into actionable steps, taking advice from people I've seen learn game development as well as my own personal experiences. Step 1: Learn to code. Assuming you're working by yourself. Video games are computer software, and somebody at some point needs to write the software (although depending on the tools you use to make the game, more or less programming will be required). This isn't a required step, some people have learned to code though making games, but depending on what you want to make and what you want to use, taking the time to set up a foundation outside of game development could be useful Step 2: Pick something to make games with The software you'll use to make your game. Pick Godot. If you want to be a free thinker instead, you can read the rest of this section. (If you still can't decide then pick Godot) Engine or a Library Game Libraries are usually like other libraries/packages that can be installed or maintained on your programming language of choice. They're usually minimal and focus on the fundamental things you'd need to make a game in that programming language, like rendering sprites/models onto a screen, inputs, collisions, ECS) They're simpler, in the sense that you need to understand a lot less of someone else's code, but they take longer to do things, because you need to write a lot more of your own code. It's kind of like driving a manual car. If you aren't into cars (developing game systems, in this simile) then you'd think driving manual is a lot of extra work you don't want to do, and would rather focus on where you're driving (the design/content of the game you're making) You should use a game library if: You really like the language the library is built with. You don't want to learn a completely original system, and enjoy building out systems yourself. You're looking to make small or very lean games You're interested in learning the fundamentals of game programming and want to know how things work. Game Engines, on the other hand, are large, bespoke software applications designed to make games within. These are what most commercial games are made within, and what most people these days use. They come with large sets of common tools, build in GUI editors and interfaces for all aspects of your game, and lots of plugins to extend functionality. You should use a game engine if: You want to make games as fast as possible Want to focus on building things specific to your game , not generic systems that lots of games would use You want to make 3d games (you can make 3d games with a library but... that's rough.) You don't mind learning a new system that extends your existing programming skills. A (hopefully exhaustive) list of engines and libraries is available here Step 3: Learn how to use it to write: follow tutorials don't fall into tutorial hell, extend tutorials to add extra features after they're over put different tutorials together to make a new game Step 4: Learn how to finish your projects Most beginners start with lofty ambitions of a \"dream game\", the one that motivated them to learn how to make games in the first place. okay I'm getting tired and will finish this up tomorrow: split your dream game into component parts that can be learned in different projects make the smallest game you can, and then scope out (2 hours, 2 days, 2 weeks, 1 month) participate in jams for motivation Step 5: Learn how to make fun games to write: you can make game, now it time to make fun game learn game design","title":"How to make games"},{"location":"makegames/#so-you-wanna-make-games","text":"Making games is very fun, and NOT as difficult as most people think. I've broken it down into actionable steps, taking advice from people I've seen learn game development as well as my own personal experiences.","title":"So you wanna make games"},{"location":"makegames/#step-1-learn-to-code","text":"Assuming you're working by yourself. Video games are computer software, and somebody at some point needs to write the software (although depending on the tools you use to make the game, more or less programming will be required). This isn't a required step, some people have learned to code though making games, but depending on what you want to make and what you want to use, taking the time to set up a foundation outside of game development could be useful","title":"Step 1: Learn to code."},{"location":"makegames/#step-2-pick-something-to-make-games-with","text":"The software you'll use to make your game. Pick Godot. If you want to be a free thinker instead, you can read the rest of this section. (If you still can't decide then pick Godot)","title":"Step 2: Pick something to make games with"},{"location":"makegames/#engine-or-a-library","text":"Game Libraries are usually like other libraries/packages that can be installed or maintained on your programming language of choice. They're usually minimal and focus on the fundamental things you'd need to make a game in that programming language, like rendering sprites/models onto a screen, inputs, collisions, ECS) They're simpler, in the sense that you need to understand a lot less of someone else's code, but they take longer to do things, because you need to write a lot more of your own code. It's kind of like driving a manual car. If you aren't into cars (developing game systems, in this simile) then you'd think driving manual is a lot of extra work you don't want to do, and would rather focus on where you're driving (the design/content of the game you're making) You should use a game library if: You really like the language the library is built with. You don't want to learn a completely original system, and enjoy building out systems yourself. You're looking to make small or very lean games You're interested in learning the fundamentals of game programming and want to know how things work. Game Engines, on the other hand, are large, bespoke software applications designed to make games within. These are what most commercial games are made within, and what most people these days use. They come with large sets of common tools, build in GUI editors and interfaces for all aspects of your game, and lots of plugins to extend functionality. You should use a game engine if: You want to make games as fast as possible Want to focus on building things specific to your game , not generic systems that lots of games would use You want to make 3d games (you can make 3d games with a library but... that's rough.) You don't mind learning a new system that extends your existing programming skills. A (hopefully exhaustive) list of engines and libraries is available here","title":"Engine or a Library"},{"location":"makegames/#step-3-learn-how-to-use-it","text":"to write: follow tutorials don't fall into tutorial hell, extend tutorials to add extra features after they're over put different tutorials together to make a new game","title":"Step 3: Learn how to use it"},{"location":"makegames/#step-4-learn-how-to-finish-your-projects","text":"Most beginners start with lofty ambitions of a \"dream game\", the one that motivated them to learn how to make games in the first place. okay I'm getting tired and will finish this up tomorrow: split your dream game into component parts that can be learned in different projects make the smallest game you can, and then scope out (2 hours, 2 days, 2 weeks, 1 month) participate in jams for motivation","title":"Step 4: Learn how to finish your projects"},{"location":"makegames/#step-5-learn-how-to-make-fun-games","text":"to write: you can make game, now it time to make fun game learn game design","title":"Step 5: Learn how to make fun games"},{"location":"tools/","text":"--Game Engines-- Godot description --Game Libraries-- Raylib --Game tools for specific Genres-- RPGMaker --Finding 2d art assets-- Opengameart --Making 2d art assets-- Aseprite --Finding 3d art assets-- itch.io --Making 3d art assets-- Blender --Finding audio assets-- somewhere --Making audio assets-- LMMS --Making Game Narratives-- Obsidian --Organizing your project-- Git!!! Please use Git!!! --Learning Game Design--","title":"Tools"},{"location":"tools/#-game-engines-","text":"","title":"--Game Engines--"},{"location":"tools/#godot","text":"description","title":"Godot"},{"location":"tools/#-game-libraries-","text":"","title":"--Game Libraries--"},{"location":"tools/#raylib","text":"","title":"Raylib"},{"location":"tools/#-game-tools-for-specific-genres-","text":"","title":"--Game tools for specific Genres--"},{"location":"tools/#rpgmaker","text":"","title":"RPGMaker"},{"location":"tools/#-finding-2d-art-assets-","text":"","title":"--Finding 2d art assets--"},{"location":"tools/#opengameart","text":"","title":"Opengameart"},{"location":"tools/#-making-2d-art-assets-","text":"","title":"--Making 2d art assets--"},{"location":"tools/#aseprite","text":"","title":"Aseprite"},{"location":"tools/#-finding-3d-art-assets-","text":"","title":"--Finding 3d art assets--"},{"location":"tools/#itchio","text":"","title":"itch.io"},{"location":"tools/#-making-3d-art-assets-","text":"","title":"--Making 3d art assets--"},{"location":"tools/#blender","text":"","title":"Blender"},{"location":"tools/#-finding-audio-assets-","text":"","title":"--Finding audio assets--"},{"location":"tools/#somewhere","text":"","title":"somewhere"},{"location":"tools/#-making-audio-assets-","text":"","title":"--Making audio assets--"},{"location":"tools/#lmms","text":"","title":"LMMS"},{"location":"tools/#-making-game-narratives-","text":"","title":"--Making Game Narratives--"},{"location":"tools/#obsidian","text":"","title":"Obsidian"},{"location":"tools/#-organizing-your-project-","text":"","title":"--Organizing your project--"},{"location":"tools/#git-please-use-git","text":"","title":"Git!!! Please use Git!!!"},{"location":"tools/#-learning-game-design-","text":"","title":"--Learning Game Design--"}]}